# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  checks: write
  pull-requests: write
  issues: write
  packages: write

concurrency:
  group: "${{ github.workflow }} @ ${{ github.ref_name }}"
  cancel-in-progress: true

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      code: ${{ steps.filter.outputs.code }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          show-progress: false
          submodules: true

      - name: Check if we actually made changes
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: filter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: .github/file-filters.yml

  warm-up-cache:
    name: Warm up the cache
    runs-on: ubuntu-latest
    needs:
      - changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    steps:
      - name: Check out code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          submodules: true

      - name: Set up node
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com

      - name: Ensure latest version of npm, older versions like v8 have broken caching
        shell: bash
        run: |
          npm install --location=global npm@latest

      - name: Download dependencies
        shell: bash
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm ci

  npm-build:
    name: Build the code
    runs-on: ubuntu-latest
    needs:
      - warm-up-cache
    steps:
      - name: Check out code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          show-progress: false
          submodules: true

      - name: Set up node
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Download dependencies from cache
        shell: bash
        run: |
          npm ci --offline

      - name: Run build
        shell: bash
        run: |
          npm run build

      - name: Compare the expected and actual dist/ directories
        id: diff
        run: |
          if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff

            echo "Creating commit with changes:"

            BRANCH="lock-file-maintenance-$(date +%s)"

            echo "Branch: ${BRANCH}"

            git config --global user.name "Kristof Mattei"
            git config --global user.email "864376+Kristof-Mattei@users.noreply.github.com"

            git checkout -b ${BRANCH}

            git commit --all --message "chore: changes caused by updating lock files. See #${{ github.event.pull_request.number }}"

            echo "Creating PR..."

            gh pr create --base main --head ${BRANCH}

            exit 1
          fi

      # If dist/ was different than expected, upload the expected version as an artifact
      - uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4.3.0
        if: ${{ failure() && steps.diff.conclusion == 'failure' }}
        with:
          name: dist
          path: dist/

  npm-lint:
    name: Lint the code
    runs-on: ubuntu-latest
    needs:
      - warm-up-cache
    steps:
      - name: Check out code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          show-progress: false
          submodules: true

      - name: Set up node
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Download dependencies from cache
        shell: bash
        run: |
          npm ci --offline

      - name: Run lint
        shell: bash
        run: |
          npm run lint -- --format=json --output-file reports/lint-report.json
        continue-on-error: true

      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@a1bf7cb320a18aa53cb848a267ce9b7417221526 # 1.2.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          report-json: reports/lint-report.json

  npm-test:
    name: Test the code
    runs-on: ubuntu-latest
    needs:
      - warm-up-cache
    steps:
      - name: Check out code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          show-progress: false
          submodules: true
          fetch-depth: 0

      - name: Set up node
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Download dependencies from cache
        shell: bash
        run: |
          npm ci --offline

      - name: Run tests
        shell: bash
        id: tests
        env:
          JEST_JUNIT_OUTPUT_DIR: reports/
          JEST_JUNIT_OUTPUT_NAME: unit-tests-report.xml
        run: |
          npm run test:ci -- --coverage --testLocationInResults --reporters=default --reporters=jest-junit
        continue-on-error: true

      - name: Upload unit-test results
        uses: enricomi/publish-unit-test-result-action@e780361cd1fc1b1a170624547b3ffda64787d365 # v2.12.0
        with:
          check_name: Unit-test results
          files: reports/unit-tests-report.xml

      - name: Upload to Coveralls
        uses: coverallsapp/github-action@3dfc5567390f6fa9267c0ee9c251e4c8c3f18949 # v2.2.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage/lcov.info

      - name: Fail if tests failed
        shell: bash
        if: steps.tests.outcome != 'success'
        run: |
          echo "Tests failed"
          exit 1

  npm-dependencies:
    name: Validate dependencies
    runs-on: ubuntu-latest
    needs:
      - warm-up-cache
    steps:
      - name: Check out code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          show-progress: false

      - name: Set up node
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: Download dependencies from cache
        shell: bash
        run: |
          npm ci --offline

      - name: Check dependencies
        shell: bash
        run: |
          npm run deps:ci

  all-done:
    name: All done
    # this is the job that should be marked as required on GitHub. It's the only one that'll reliably trigger
    # when any upstream fails: success
    # when all upstream skips: pass
    # when all upstream success: success
    # combination of upstream skip and success: success
    runs-on: ubuntu-latest
    needs:
      - npm-build
      - npm-dependencies
      - npm-lint
      - npm-test
    if: ${{ always() }}
    steps:
      - name: Fail!
        shell: bash
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: |
          echo "One / more upstream failed or was cancelled. Failing job..."
          exit 1

      - name: Success!
        shell: bash
        run: |
          echo "Great success!"
